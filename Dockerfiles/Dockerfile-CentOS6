FROM centos:centos6

# The carta-backend will use GCC 8 functions, so install and activate devtoolset-8 
RUN \
  yum -y install centos-release-scl && \
  yum install -y devtoolset-8-gcc devtoolset-8-gcc-c++ devtoolset-8-gcc-gfortran && \
  echo "source scl_source enable devtoolset-8" >> /etc/bashrc
 
# Install required packages
RUN \
  source /etc/bashrc && \
  yum -y install epel-release && \
  yum -y install autoconf automake bison blas-devel cfitsio-devel flex fmt-devel git \
    gsl-devel hdf5-devel lapack-devel libtool libxml2-devel libzstd-devel wget

# gRPC needs a newer openSSL
RUN \
  source /etc/bashrc && \
  cd /root && \
  wget https://www.openssl.org/source/openssl-1.1.1.tar.gz && \
  tar -xvf openssl-1.1.1.tar.gz && cd openssl-1.1.1 && \
  ./config --prefix=/usr && \
  make && make install && \
  cd /root && rm -rf openssl-1.1.1*

# git lfs is a little tricky to install on CentOS6
RUN \ 
  curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh | bash && \
  yum install -y git-lfs

# gRPC will need cmake >3.13
RUN \
  source /etc/bashrc && \
  cd /root && \
  git clone https://github.com/Kitware/CMake.git && \
  cd CMake && git checkout v3.17.0 && ./configure && \
  make -j 2 && make install && \
  cd /root && rm -rf CMake

# Install fmt of at least version 5.3.0 because spdlog will need it for external 'fmt'
RUN \
  source /etc/bashrc && \
  cd /root && \
  git clone https://github.com/fmtlib/fmt && \
  mkdir -p fmt/build && cd fmt/build && \
  cmake .. && make && make install && \
  cd /root && rm -rf fmt

# Install spdlog with external 'fmt' library support
RUN \
  source /etc/bashrc && \
  cd /root && \
  git clone https://github.com/gabime/spdlog && \
  mkdir -p spdlog/build && cd spdlog/build && \
  cmake .. -DSPDLOG_FMT_EXTERNAL=ON && \
  make && make install && \
  cd /root && rm -rf spdlog

# Install a newer pugixml from source
RUN \
  source /etc/bashrc && \
  cd /root && \
  git clone https://github.com/zeux/pugixml && \
  mkdir -p pugixml/build && cd pugixml/build && \
  CXXFLAGS="-DPUGIXML_COMPACT=1 -DPUGIXML_NO_XPATH=1" cmake -DCMAKE_BUILD_TYPE=RELEASE .. && \
  make && make install && \
  cd /root && rm -rf pugixml

# CARTA will have a problem finding the .h files in /usr/include/cfitsio/
RUN \
  source /etc/bashrc && \
  cp /usr/include/cfitsio/* /usr/include/

# casacore requies wcslib 5.15 but CentOS6 provides 4.3, so install wcslib from source
RUN \
  source /etc/bashrc && \
  cd /root && \
  wget https://casa.nrao.edu/download/devel/wcslib/wcslib-5.15.tar.bz2 && \
  tar -xf wcslib* && cd wcslib* && \
  ./configure && make && make install && \
  cd .. && rm -rf wcslib*

# CARTA needs proto3, CentOS6 only provides proto2
RUN \
  source /etc/bashrc && \
  cd /root && git clone https://github.com/protocolbuffers/protobuf.git && cd protobuf && \
  ./autogen.sh && ./configure && make && make install && \
# not all the .h files in stubs are copied over/installed for some reason
  yes | cp -rf /root/protobuf/src/google/protobuf/stubs /usr/local/include/google/protobuf/ && \
  cd .. && rm -rf protobuf

# CARTA has a problem with CentOS6 tbb version 2.2. Get a newer version:
RUN \
  source /etc/bashrc && \
  cd /root && \
  wget https://github.com/01org/tbb/releases/download/2017_U2/tbb2017_20161004oss_lin.tgz && \
  tar -xvf tbb2017_20161004oss_lin.tgz && \
  cp -r /root/tbb2017_20161004oss/lib/intel64/gcc4.7/* /usr/lib64/ && \
  cp -r /root/tbb2017_20161004oss/include/tbb /usr/include && \
  cd /root && rm -rf tbb2017_20161004oss*

# Get casacore data
RUN \
  source /etc/bashrc && \
  git lfs install && \
  mkdir -p /usr/local/share/casacore && cd /usr/local/share/casacore && \
  git clone --no-checkout https://open-bitbucket.nrao.edu/scm/casa/casa-data.git data && \
  cd data && git show HEAD:distro | bash

# Get libsofa.a for casacore
RUN \
  source /etc/bashrc && \
  cd /root && \
  wget http://www.iausofa.org/2018_0130_F/sofa_f-20180130.tar.gz && \
  tar xzf sofa_f-20180130.tar.gz && rm sofa_f-20180130.tar.gz && \
  cd sofa/20180130/f77/src && make && cp libsofa.a /usr/lib/libsofa.a && \
  cd /root && rm -rf sofa

# Install carta-casacore (with fixed CASAROOT)
RUN \
  source /etc/bashrc && \
  cd /root && \
  git clone -q --recursive https://open-bitbucket.nrao.edu/scm/casa/carta-casacore.git && \
  mkdir -p carta-casacore/build && cd carta-casacore/build && \
  cmake .. -DUSE_FFTW3=ON \
           -DUSE_HDF5=ON \
           -DUSE_THREADS=ON \
           -DUSE_OPENMP=ON \
           -DCMAKE_BUILD_TYPE=Release \
           -DDATA_DIR=/usr/local/share/casacore/data \
           -DBUILD_TESTING=OFF \
           -DBoost_NO_BOOST_CMAKE=1 \
           -DBUILD_PYTHON=OFF \
           -DUseCcache=1 \
           -DHAS_CXX11=1 && \
  make -j2 && make install && \
  cd /root && rm -rf carta-casacore

# Install gRPC for the scripting interface 
RUN \
  source /etc/bashrc && \
  cd /root && \
  git clone --recurse-submodules https://github.com/grpc/grpc && \
  mkdir -p grpc/cmake/build && cd grpc/cmake/build && \
  export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH && \
  cmake -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DgRPC_PROTOBUF_PROVIDER=package -DgRPC_ZLIB_PROVIDER=package -DgRPC_SSL_PROVIDER=package ../.. && \
  make -j 2 && make install && \
  cd /root && rm -rf grpc

# Install uWS
RUN \
  source /etc/bashrc && \
  cd /root && \
  git clone https://github.com/uNetworking/uWebSockets.git && \
  cd uWebSockets && git checkout v0.14 && cd .. && \
  make default install -C uWebSockets && \
  rm -rf uWebSockets

# Install zfp
RUN \
  source /etc/bashrc && \
  cd /root && \
  git clone https://github.com/LLNL/zfp.git && \
  mkdir -p zfp/build && cd zfp/build && \
  cmake -DCMAKE_BUILD_TYPE=Release .. && make all install && \
  cd /root && rm -rf zfp

# Forward port so that the webapp can properly access it
# from outside of the container
EXPOSE 3002

ENV HOME /root

# Required for running the backend
ENV LD_LIBRARY_PATH "/usr/local/lib64:/usr/local/lib"
ENV CASAPATH "/usr/local/share/casacore linux local `hostname`"

WORKDIR /root

# overwrite this with 'CMD []' in a dependent Dockerfile
CMD ["bash"]
