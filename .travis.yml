language: cpp
os: osx
compiler: clang
osx_image: xcode10.1

python:
  - 2.7

language: node_js
node_js:
  - "8"

cache:
  directories:
    - $HOME/casacore
    - $HOME/measures_data
    - $HOME/package
    - $HOME/carta-frontend-built
    - $HOME/emsdk

before_install:
    - ls /usr/local/include/
#    - sudo rm /usr/local/include/c++
    - brew update > /dev/null
    - brew install gcc || brew link --overwrite gcc
    - brew link gcc # needed to use xcode10
    - which gfortran
    - brew install tbb fmt protobuf cfitsio wcslib fftw hdf5
# using default system openssl   - brew install openssl

env:
  global:
    - secure: "Nvvk/Woz9iRXQoZ74t4BiLi+iE6Db2WFRVgpA5ppgQsTg1QIiywOnS7DFGZ6FRPrZXHwxwC7JaUDW0xw3PJkEoVNOhILtWs9EBxYVfE7R+93ozHA8I29SHdAZjQz16AJF3S32KbzdpvioqjW0JKwfJd5yJbSql5hx/7w2832fqI4aWVUBXuZwEtEpew7ptVh4f5gOxhLi0ccSRIKuORFRZlYXMyVOZYwlMKKupbOS0DUA+G63z1bCxdeR+9QmmxKcWOHV4paRMhL07w2yp9G3TQ10lYtAE51uTC/jnMLjVBVuuq79Uwf+pr8WucGCjff6wuIALLsy4ZM1a7P2RIBa9PhncsY8kpl6TJbPwlflIpb7RlJLrzUBrYuH58PXCejtCS+75yKiZ96YPGxPyXoNZHZkXMz8B0Si4jVtnlIzYojuPGkLvnVib4YEoF5pjsXA62M59A9paGBVldeSuYlGMVTw1qlWzgYBS5EwNqL8dcJEvp46e0BfQvsK32FMVUUV2WHDz3AJRCjHbcbhsxDyoMx3R1O7wXCjk3wYVJ+8ZvM6geoBXnatG0nG/VP6eV4KpIk6ymnASXIBb+A5iUPDl51EdXc4mnqNn4ko4c9fFQ0hrkkB17hUPTPuVQqMOzdpYcUYHWGbys6gTtO9TaeQbCLDZZnEHXy0I1zX4OXChE="
    - secure: "U0vHRYyzmqq2FTB9CNvu76OGqs2QKioYFqy0DSsHKl6HJ9AtSD6iY/OwZ5GTolBE+qsNzOVjF5Lv8sYb6UbynhZJYpFY5DGwrU/1uVodskJPtSIeajVU9hCeYJKxy42jDfJYvgOLfdO3i/YoP9YFMZgiVxFG8izD6MUso5U7r6Q+G8QauRLmnxmZ2T9N14th5mERK4aK5fi+V8D6S8Mj1KITOgQPGpNgiqg5DpywE8lVzAnb1w9DcFvWtLNA1dU6T1kpV95oOShNAC6gFK9SIyoNny3sMIQMF1FHPCTcBDmhf2cQvPZLqjKnvUkytZSza5Gcil/YeI0ken1ADb7l2gDecMsFBA2iOB0SWVTmO5tbn2Ouh4c9BsQw8f47OQaHQMQL5cUEZwQMZY5J8SLkFpUDwFMEvTUROyQNCpau6u9PPARUxYFFysecA3V+Ad/Xo65Jx24zK0ruUOLGMw+fY3ZOONTuSLrP7Y7qPnK8/WnEXnq4HP0lhhCwJQCMJpHF2WHYbuZ/q61rsOnKZeVCzq5kKfpHyyrrB01Y9tQZEZ1P9qWbfx2LEg3/4sOpT/E0fS+ujWLmPULdeLDxyxW71+Q4ylSwfokuVvftTD109ktGCpQepIAN2u2sjbEI12Vto4MOUb4GymLbQkdK+mYiv3GjxjbC0Q8f5iLYUcCUsRA="
    - secure: "4XIGM8SQNZq8uMyqe5vTwiMTlsmHjCRC+hfbABvRF0KLppFIwCj+yHcplWtTvMt8ljFZRnxAS1mdnZ0om6vWBohAW9yFoaMuJ7LdrZpOScXYyV4tJzM+MsqyE0pJ14uBc+C5CJc7nBTrX2M7TSoYGGpuSvitFlWr0s7OH1903yuGZWOCDO2tjvJ2JVbjrWgqDeF2fuLOPQdohRfR+O1510Ul8zpggLalr3QBPZ3mM6NI2AahUyMC5TlpQNldT9zoikRrqrzE1ODYYbBkt2NOQ/Bb+xnstg8XKM7K7gLhxMkpdjAXQj3Y2euaiYesxN8jWmcc+0NtVs/DEV3viesSL0omMh4buMTc94Aydnlt6YXvebcTuTiMz5Wb58WOiMo1L5eiGn/4GhShEMHkF8XtnRoWA5ripm4oAqbu7uVr0XvgeGWk2rRHGbtFMeKj9+543/sTA84c7XW3A7fH2CZw76pRhGmeQwOJdWez8s0BCABUjBc/MDjdA+eWMPQwxSh2l3jLFtApeoowFBELkqwq9sZMS2bjvlngMzDTZLjFPFfkcTSjtV1ar2XWjTed1D84t3VG18dxiUOBzz68i31VFjaJRRGPRh5TONgug6EufsWqQFOG+OEPhl6dWO4bstKAZlv2hUgNRSkp9SvzU1mvpX8C3rmZAbYQs9SjHg1YBfo="
    - secure: "JxgXIlpLtHcfS61+1tPyLfq6kMeHZ50S/ZnTZu41Dtg1pAan7tpzHd3KjK+ZY+fQJ2pmRQY2Jx7l34N9h++dZPKZv20Xn2VyidmiiqVXHtNlgv2tPs4ca/jVN9wfrxvvJmP6ZlF668F3Yhmo3gQiCz9Usk/Zz2WPeTIq0zu/BCEdkgs35pxl5Qej5Q4rxclJ3ovhboSt0mn31k0LrD/CX4aUzRn87RTvqxB2v6l/m3aJyujxy+LnLUM3wWwJdy8Rj2V92dDO6ljIfKDx01ptsksUgUvRvt4HO5xF5s2g1efFcVjxYHygwx1dgWei81Mt/JhxAvaQi4faPkF2uNdqfEen4WQhIQL3ViHQO2yg0HR35h30dgiB2f5VkHFmY4AUjnPTZnLmx3lSSbVKXe8sHhnuwa4xgnb4SX7plxaj9lZUj1MUowIVdsZGwBlruKEjkLYIQ6ygLK6Bsd80MmXJw0YmIARK5zUXcp+qfhhEjEmDMdumg/6CqceFUsL+slw7r4bkihAcegtZs3w6Ufg9iAT/ELjANpFYj90TRK8d6ffJAq9q8ruMAef42jJrOFo3Jp+6nuRQL/R7dATMbk0PDRapDjS9FfneQI8vofgHlRUpJTCqfsyBzHBJAkBhF16m1Kkn7Ejvm8GqGqE8XnX7zVTlilohxZJBYXEIlpeK9QU="
    - secure: "p6Pv3R/SJa+0we8iDAWrpx5AxTvaCOxZwSfwPg7g+hOi/z4Gfq9V39d0qBD0G80Zbsgvk2AiheVvIIqIqIyHw3eI6X6RgXk7OnosP+FzLC2M+wwnJWLinRTQvnnT3mUCfHMYYHMS9GkF2klEWQAvteuDfEW1BbMwKS153tCxfxKS9Zx4bnAK6CLclp4sa6xhicr5mvww/ScRZ5gs1UGnE76CbQelL29uLed7cjwlleCE5OIKXy++YqHGUbeVPRdecO1Nin6A7L+rhq8z0V6m1hfShJdOeUMNh7rcfWxFBb0XyjHOaX6cKHMbop1jEK7kytCUxd/t+Fz5KlL1vcoFPWjMZij+JeKem7ApGtDKxbySrYXEZnsbh5UTVbL0ToPET9FmtSmzJwGQQW/FygnZ3HgUjNaOm+U/dQ4u3U8qfVOFcGS15n2X4GFSniDzAWLxavSJjhLJfEDvaAV4VME1++7Tr3Pvz/KZKNMpcUEnMdp8Bsu6SiMr714pLa2NQGCjh1piysDocl5Hgiq6pdJ+MXkfINM4fbrmZ+bT6VMkjrLvyaqdCmWhoLKEy7z42bGwaMUry3K5x9yZHyo+wqUKjwMnTWYHVagYEReOyPNhJ6aWEd3QNWZW/Z2iFvAQFqYw6ROF3JPtxdwmM1C1wHWab1fpbKM0GaP5DAW6WWaR3nw="

global:
    - CI_NODE_TOTAL=2 # attempt to speed up the build process so the casacore stage can finish within 50 minutes

jobs:
  include:
    - stage: build casacore
      install: true
      script:
        - ls /usr/local/opt/openssl/
        - cd $HOME
        - ls
        - ls $HOME/casacore/
        - if [ -e "$HOME/casacore/lib" ]; then echo "casacore cache exists"; else echo "building casacore" && $TRAVIS_BUILD_DIR/scripts/ci_mac_casacore.sh; fi

    - stage: build carta-backend
      install: true
      script:
        # copy cached casacore to default system location
        - sudo cp -r $HOME/casacore/lib/* /usr/local/lib/
        - sudo cp -r $HOME/casacore/include/casacore /usr/local/include/
        - cd $HOME

         # echo install libuv
        - git clone https://github.com/libuv/libuv.git
        - cd libuv
        - sh autogen.sh
        - ./configure
        - make -j 2
        - sudo make install
        - cd ..

        # install uWebsockets
        - git clone https://github.com/uNetworking/uWebSockets.git
        - cd uWebsockets
        - git checkout c7aa984 # changing to the old non-'clang'-only Makefile
        - make
        - sudo make install
        - cd ..

        # install zfp
        - git clone https://github.com/LLNL/zfp.git
        - cd zfp && mkdir build && cd build
        - cmake ..
        - make
        - sudo make install
        - cd ../..

        # build carta-backend
        - echo "Building carta-backend" 
        - cd $TRAVIS_BUILD_DIR
        - git submodule init && git submodule update
        - sed -i '' 's/target_link_libraries(carta_backend/target_link_libraries(carta_backend uv/g' CMakeLists.txt # fix to find uv
        - mkdir build && cd build
        - cmake -DCMAKE_CXX_FLAGS="-I /usr/local/opt/openssl/include" -DCMAKE_CXX_STANDARD_LIBRARIES="-L /usr/local/Cellar/fmt/5.1.0/lib -L /usr/local/Cellar/hdf5/1.10.4/lib -L /usr/local/lib -L /usr/local/opt/openssl/lib" ..
        - make
        - ls -sort
        - otool -L carta_backend

        - echo "Package carta-backend"
        # install macdylibbundler
        - git clone https://github.com/auriamg/macdylibbundler.git
        - cd macdylibbundler
        - make
        - sudo make install
        - cd ..
        - mkdir -p package/bin && cd package/bin && cp ../../carta_backend .
        - cp $TRAVIS_BUILD_DIR/scripts/run.sh .
        - cp /usr/local/lib/libuWS.dylib .
#        - install_name_tool -change @rpath/libzfp.0.dylib /usr/local/lib/libzfp.0.dylib carta-backend
        - otool -L carta_backend
        # Problematic for dylibbundler to find libzfp.0.dylib. 
        # (Changing path with install_name_tool does not seem to work).
        # Location needs to be manually entered in dylibbundler several times.
        # dylibbundler also needs location of libboost_system-mt.dylib entered manually.
        # To save more trial-and-error to find the correct sequence, copy libzfp.0.dylib to 
        # /usr/local/opt/boost/lib/ (same location as libboost_system-mt.dylib) 
        # so that "keyboard_input.txt" only needs to send one entry multiple times.
        #
        - sudo cp /usr/local/lib/libzfp.0.dylib /usr/local/opt/boost/lib/

        - dylibbundler -od -of -b -d ../libs -x carta_backend < $TRAVIS_BUILD_DIR/scripts/keyboard_input.txt
        - rm libuWS.dylib
        - otool -L carta_backend

        - cd .. && mkdir etc && cd etc
        - if [ -e "$HOME/measures_data/measures_data.tar.gz" ]; then echo "measures data cache exists"; else echo "downloading measures data" && curl -o $HOME/measures_data/measures_data.tar.gz  http://alma.asiaa.sinica.edu.tw/_downloads/measures_data.tar.gz; fi
        - cp $HOME/measures_data/measures_data.tar.gz .
        - tar -xvf measures_data.tar.gz
        - rm measures_data.tar.gz
        - mv measures_data data        
        - cd ..
        - ls bin/
        - ls libs/
        - ls etc/
        - cd ..
        - rm -rf $HOME/package #remove any old cached package directory
        - cp -r package $HOME/

    - stage: upload package
      install: true
      script:
        - echo "Upload the package"
        - cd $HOME
        - ls -sort
        - cp -r package package_$TRAVIS_JOB_NUMBER
        - tar -czvf package_$TRAVIS_JOB_NUMBER.tar.gz package_$TRAVIS_JOB_NUMBER
        - export SSHPASS=$DEPLOY_PASS

        - brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb

        - export SSHPASS=$DEPLOY_PASS
        - sshpass -e scp -o stricthostkeychecking=no -P $DEPLOY_PORT package_$TRAVIS_JOB_NUMBER.tar.gz $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
#        - echo "Finished !!"

    - stage: run tests
      install: true
      script:
#set up emscripten
        - cd $HOME
        - rm -rf emsdk
        - git clone https://github.com/juj/emsdk.git
        - cd emsdk
        - git pull
        - ./emsdk install sdk-1.38.11-64bit
        - ./emsdk activate sdk-1.38.11-64bit
        - source ./emsdk_env.sh
        - cd $HOME
# prepare frontend
        - git clone https://github.com/idia-astro/carta-frontend.git
        - cd carta-frontend
        - git submodule init
        - git submodule update
        - npm install
        - cd wasm_libs
        - ./build_libs.sh
        - cd ..
        - cd wasm_src
        - ./build_wrappers.sh
        - cd ..
        - cd protobuf
        - ./build_proto.sh
# prepare tests
        - cd $HOME
        - cd package
        - ls -sort
        - cd bin
        - wget http://alma.asiaa.sinica.edu.tw/_downloads/QA.tar.gz
        - tar -xvf QA.tar.gz
        - cp -r QA/HD163296_CO_2_1_mom0_zoom.image .
        - ls -sort
        - ./run.sh & # run carta_backend in the background
        - cd $HOME/carta-frontend/src
        - rm -rf test # temporarily remove advanced jest tests
        - rm ICD.test.ts
        - cp $HOME/package/bin/QA/ICD.test.ts . # temporarily copy simple jest test
        - npm run test < $TRAVIS_BUILD_DIR/scripts/q.txt
        - echo "Finished !!"

